"use strict";
class ScaledImage extends Nitro.Component {
    element = document.createElement('canvas');
    constructor() {
        super();
        this.element.style.position = 'absolute';
        this.element.style.border = '2px solid black';
    }
    render(_) {
        const input = this.input;
        if (input.absolute) {
            this.element.style.position = 'absolute';
        }
        this.element.width = input.image.width * input.scale;
        this.element.height = input.image.height * input.scale;
        const ctx = this.element.getContext('2d');
        ctx.imageSmoothingEnabled = false;
        if (input.background !== undefined) {
            this.element.style.backgroundColor = input.background;
        }
        ctx.drawImage(input.image, 0, 0, this.element.width, this.element.height);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2NhbGVkSW1hZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90cy9TY2FsZWRJbWFnZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sV0FBWSxTQUFRLEtBQUssQ0FBQyxTQUErRztJQUU5SSxPQUFPLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUUzQztRQUNDLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQztRQUN6QyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsaUJBQWlCLENBQUM7SUFDL0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxDQUFrQjtRQUN4QixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBRXpCLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7UUFDMUMsQ0FBQztRQUVELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDckQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztRQUV2RCxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUUsQ0FBQztRQUMzQyxHQUFHLENBQUMscUJBQXFCLEdBQUcsS0FBSyxDQUFDO1FBRWxDLElBQUksS0FBSyxDQUFDLFVBQVUsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQztRQUN2RCxDQUFDO1FBRUQsR0FBRyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzRSxDQUFDO0NBRUQiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTY2FsZWRJbWFnZSBleHRlbmRzIE5pdHJvLkNvbXBvbmVudDx7IGltYWdlOiBIVE1MSW1hZ2VFbGVtZW50IHwgSFRNTENhbnZhc0VsZW1lbnQsIHNjYWxlOiBpbnQsIGJhY2tncm91bmQ/OiBzdHJpbmcsIGFic29sdXRlPzogYm9vbGVhbiB9PiB7XG5cblx0ZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCk7XG5cdFx0dGhpcy5lbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcblx0XHR0aGlzLmVsZW1lbnQuc3R5bGUuYm9yZGVyID0gJzJweCBzb2xpZCBibGFjayc7XG5cdH1cblxuXHRyZW5kZXIoXz86IE5pdHJvLlJlbmRlcmVyKTogdm9pZCB8IEhUTUxFbGVtZW50IHtcblx0XHRjb25zdCBpbnB1dCA9IHRoaXMuaW5wdXQ7XG5cblx0XHRpZiAoaW5wdXQuYWJzb2x1dGUpIHtcblx0XHRcdHRoaXMuZWxlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG5cdFx0fVxuXG5cdFx0dGhpcy5lbGVtZW50LndpZHRoID0gaW5wdXQuaW1hZ2Uud2lkdGggKiBpbnB1dC5zY2FsZTtcblx0XHR0aGlzLmVsZW1lbnQuaGVpZ2h0ID0gaW5wdXQuaW1hZ2UuaGVpZ2h0ICogaW5wdXQuc2NhbGU7XG5cblx0XHRjb25zdCBjdHggPSB0aGlzLmVsZW1lbnQuZ2V0Q29udGV4dCgnMmQnKSE7XG5cdFx0Y3R4LmltYWdlU21vb3RoaW5nRW5hYmxlZCA9IGZhbHNlO1xuXG5cdFx0aWYgKGlucHV0LmJhY2tncm91bmQgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0dGhpcy5lbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGlucHV0LmJhY2tncm91bmQ7XG5cdFx0fVxuXG5cdFx0Y3R4LmRyYXdJbWFnZShpbnB1dC5pbWFnZSwgMCwgMCwgdGhpcy5lbGVtZW50LndpZHRoLCB0aGlzLmVsZW1lbnQuaGVpZ2h0KTtcblx0fVxuXG59Il19